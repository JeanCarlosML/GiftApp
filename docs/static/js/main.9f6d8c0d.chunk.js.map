{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","handleSubmit","e","preventDefault","categories","className","onSubmit","type","onChange","target","value","placeholder","onClick","icon","faSearch","color","flip","size","GifGridItem","id","title","url","src","alt","getGifs","category","a","URI_GIF","encodeURI","fetch","method","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","setcategories","ReactDOM","render","document","getElementById"],"mappings":"oNAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAM1CC,EAAe,SAACC,GACpBA,EAAEC,iBACFN,GAAc,SAACO,GAAD,OAAiBL,GAAjB,mBAAgCK,QAEhD,OACE,uBAAMC,UAAU,OAAOC,SAAUL,EAAjC,UACE,uBACEM,KAAK,OACLC,SAZoB,SAACN,GACzBF,EAAcE,EAAEO,OAAOC,QAYnBC,YAAY,qCAEd,qBAAKN,UAAU,eAAeO,QAASX,EAAvC,SACE,cAAC,IAAD,CACEY,KAAMC,IACNC,MAAM,QACNC,KAAK,aACLC,KAAK,a,QCzBFC,EAAc,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACvC,OACE,sBAAKhB,UAAU,yCAAf,UACE,qBAAKiB,IAAKD,EAAKE,IAAKH,IACpB,4BAAIA,Q,yBCcKI,EAjBF,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACE,mCACVC,EAFQ,uDACE,mCADF,cAE+DC,UAC3EH,IAHY,SAKKI,MAAMF,EAAS,CAAEG,OAAQ,QAL9B,cAKRC,EALQ,gBAMSA,EAAKC,OANd,uBAMNC,EANM,EAMNA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GACrB,MAAO,CACLjB,GAAIiB,EAAIjB,GACRC,MAAOgB,EAAIhB,MACXC,IAAKe,EAAIC,OAAOC,iBAAiBjB,QAXvB,kBAcPa,GAdO,4CAAH,sDCIAK,EAAU,SAAC,GAAkB,IAAhBd,EAAe,EAAfA,SAAe,ECJb,SAACA,GAAc,IAAD,EACd3B,mBAAS,CACjCmC,KAAM,GACNO,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAWxC,OANAC,qBAAU,WACRnB,EAAQC,GAAUmB,MAAK,SAACC,GACtBH,EAAS,CAAET,KAAMY,EAAML,SAAS,SAEjC,CAACf,IAEGgB,EDN2BK,CAAarB,GAAjCY,EADyB,EAC/BJ,KAAcO,EADiB,EACjBA,QAEtB,OACE,sBAAKnC,UAAU,OAAf,UACE,6BAAKoB,IACJe,GAAW,mBAAGnC,UAAU,mCAAb,wBACZ,qBAAKA,UAAU,QAAf,SACGgC,EAAOF,KAAI,SAACC,GAAD,OACV,wBAAC,EAAD,2BAAiBA,GAAjB,IAAsBW,IAAKX,EAAIjB,eEX5B6B,G,MAAe,WAC1B,IADgC,EAEIlD,mBADvB,CAAC,WADkB,mBAEzBM,EAFyB,KAEb6C,EAFa,KAIhC,OACE,sBAAK5C,UAAU,YAAf,UACE,wBAAQA,UAAU,SAAlB,SACE,yCAEF,sBAAMA,UAAU,OAAhB,SACE,0BAASA,UAAU,iBAAnB,UACE,cAAC,EAAD,CAA4BR,cAAeoD,IAC3C,qBAAK5C,UAAU,QAAf,SACGD,EAAW+B,KAAI,SAACV,GAAD,OACd,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,kB,MCb5ByB,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.9f6d8c0d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setCategories((categories) => [inputValue, ...categories]);\r\n  };\r\n  return (\r\n    <form className=\"form\" onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        onChange={handleInputChange}\r\n        placeholder=\"Search all the GIFS and Stickers\"\r\n      />\r\n      <div className=\"form__search\" onClick={handleSubmit}>\r\n        <FontAwesomeIcon\r\n          icon={faSearch}\r\n          color=\"white\"\r\n          flip=\"horizontal\"\r\n          size=\"2x\"\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n","import React from \"react\";\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n","//URI = api.giphy.com/v1/gifs/search\r\n//API KEY = bjp8BjN0IxUZLheJSQSi9rZCIKSdnI1Q\r\nconst getGifs = async (category) => {\r\n  const API_KEY = \"bjp8BjN0IxUZLheJSQSi9rZCIKSdnI1Q\";\r\n  const URI_GIF = `https://api.giphy.com/v1/gifs/search?api_key=${API_KEY}&q=${encodeURI(\r\n    category\r\n  )}`;\r\n  const resp = await fetch(URI_GIF, { method: \"GET\" });\r\n  const { data } = await resp.json();\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images.downsized_medium.url,\r\n    };\r\n  });\r\n  return gifs;\r\n};\r\n\r\nexport default getGifs;\r\n","import React from \"react\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { data: images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <div className=\"item\">\r\n      <h3>{category}</h3>\r\n      {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n      <div className=\"cards\">\r\n        {images.map((img) => (\r\n          <GifGridItem {...img} key={img.id} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport getGifs from \"../helpers/getGifs\";\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) => {\r\n      setState({ data: imgs, loading: false });\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\nimport \"animate.css\"\r\nexport const GifExpertApp = () => {\r\n  const data = [\"Naruto\"];\r\n  const [categories, setcategories] = useState(data);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header className=\"header\">\r\n        <h2>GIPHY</h2>\r\n      </header>\r\n      <main className=\"main\">\r\n        <section className=\"main__buscador\">\r\n          <AddCategory /*Formulario*/ setCategories={setcategories} />\r\n          <div className=\"items\">\r\n            {categories.map((category) => (\r\n              <GifGrid key={category} category={category} />\r\n            ))}\r\n          </div>\r\n        </section>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { GifExpertApp } from \"./GifExpertApp\";\nimport \"./index.css\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}